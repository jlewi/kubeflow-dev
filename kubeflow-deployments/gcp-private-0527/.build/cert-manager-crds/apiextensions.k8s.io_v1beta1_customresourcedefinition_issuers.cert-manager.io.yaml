apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: issuers.cert-manager.io
spec:
  group: cert-manager.io
  names:
    kind: Issuer
    listKind: IssuerList
    plural: issuers
    singular: issuer
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      properties:
        apiVersion:
          type: string
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        kind:
          type: string
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        metadata:
          type: object
        spec:
          type: object
          description: IssuerSpec is the specification of an Issuer. This includes
            any configuration required for the issuer.
          properties:
            acme:
              type: object
              description: ACMEIssuer contains the specification for an ACME issuer
              properties:
                email:
                  type: string
                  description: Email is the email for this account
                privateKeySecretRef:
                  type: object
                  description: PrivateKey is the name of a secret containing the private
                    key for this user account.
                  properties:
                    name:
                      type: string
                      description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                        TODO: Add other useful fields. apiVersion, kind, uid?'
                    key:
                      type: string
                      description: The key of the secret to select from. Must be a
                        valid secret key.
                  required:
                  - name
                server:
                  type: string
                  description: Server is the ACME server URL
                skipTLSVerify:
                  type: boolean
                  description: If true, skip verifying the ACME server TLS certificate
                solvers:
                  type: array
                  description: Solvers is a list of challenge solvers that will be
                    used to solve ACME challenges for the matching domains.
                  items:
                    type: object
                    properties:
                      selector:
                        type: object
                        description: Selector selects a set of DNSNames on the Certificate
                          resource that should be solved using this challenge solver.
                        properties:
                          dnsNames:
                            type: array
                            description: List of DNSNames that this solver will be
                              used to solve. If specified and a match is found, a
                              dnsNames selector will take precedence over a dnsZones
                              selector. If multiple solvers match with the same dnsNames
                              value, the solver with the most matching labels in matchLabels
                              will be selected. If neither has more matches, the solver
                              defined earlier in the list will be selected.
                            items:
                              type: string
                          dnsZones:
                            type: array
                            description: List of DNSZones that this solver will be
                              used to solve. The most specific DNS zone match specified
                              here will take precedence over other DNS zone matches,
                              so a solver specifying sys.example.com will be selected
                              over one specifying example.com for the domain www.sys.example.com.
                              If multiple solvers match with the same dnsZones value,
                              the solver with the most matching labels in matchLabels
                              will be selected. If neither has more matches, the solver
                              defined earlier in the list will be selected.
                            items:
                              type: string
                          matchLabels:
                            type: object
                            additionalProperties:
                              type: string
                            description: A label selector that is used to refine the
                              set of certificate's that this challenge solver will
                              apply to.
                      dns01:
                        type: object
                        properties:
                          acmedns:
                            type: object
                            description: ACMEIssuerDNS01ProviderAcmeDNS is a structure
                              containing the configuration for ACME-DNS servers
                            properties:
                              accountSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                              host:
                                type: string
                            required:
                            - accountSecretRef
                            - host
                          akamai:
                            type: object
                            description: ACMEIssuerDNS01ProviderAkamai is a structure
                              containing the DNS configuration for Akamai DNSâ€”Zone
                              Record Management API
                            properties:
                              accessTokenSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                              clientSecretSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                              clientTokenSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                              serviceConsumerDomain:
                                type: string
                            required:
                            - accessTokenSecretRef
                            - clientSecretSecretRef
                            - clientTokenSecretRef
                            - serviceConsumerDomain
                          azuredns:
                            type: object
                            description: ACMEIssuerDNS01ProviderAzureDNS is a structure
                              containing the configuration for Azure DNS
                            properties:
                              clientID:
                                type: string
                              clientSecretSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                              environment:
                                type: string
                                enum:
                                - AzurePublicCloud
                                - AzureChinaCloud
                                - AzureGermanCloud
                                - AzureUSGovernmentCloud
                              hostedZoneName:
                                type: string
                              resourceGroupName:
                                type: string
                              subscriptionID:
                                type: string
                              tenantID:
                                type: string
                            required:
                            - clientID
                            - clientSecretSecretRef
                            - resourceGroupName
                            - subscriptionID
                            - tenantID
                          clouddns:
                            type: object
                            description: ACMEIssuerDNS01ProviderCloudDNS is a structure
                              containing the DNS configuration for Google Cloud DNS
                            properties:
                              project:
                                type: string
                              serviceAccountSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                            required:
                            - project
                            - serviceAccountSecretRef
                          cloudflare:
                            type: object
                            description: ACMEIssuerDNS01ProviderCloudflare is a structure
                              containing the DNS configuration for Cloudflare
                            properties:
                              apiKeySecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                              email:
                                type: string
                            required:
                            - apiKeySecretRef
                            - email
                          cnameStrategy:
                            type: string
                            description: CNAMEStrategy configures how the DNS01 provider
                              should handle CNAME records when found in DNS zones.
                            enum:
                            - None
                            - Follow
                          digitalocean:
                            type: object
                            description: ACMEIssuerDNS01ProviderDigitalOcean is a
                              structure containing the DNS configuration for DigitalOcean
                              Domains
                            properties:
                              tokenSecretRef:
                                type: object
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                            required:
                            - tokenSecretRef
                          rfc2136:
                            type: object
                            description: ACMEIssuerDNS01ProviderRFC2136 is a structure
                              containing the configuration for RFC2136 DNS
                            properties:
                              nameserver:
                                type: string
                                description: 'The IP address of the DNS supporting
                                  RFC2136. Required. Note: FQDN is not a valid value,
                                  only IP.'
                              tsigAlgorithm:
                                type: string
                                description: 'The TSIG Algorithm configured in the
                                  DNS supporting RFC2136. Used only when ""tsigSecretSecretRef""
                                  and ""tsigKeyName"" are defined. Supported values
                                  are (case-insensitive): ""HMACMD5"" (default), ""HMACSHA1"",
                                  ""HMACSHA256"" or ""HMACSHA512"".'
                              tsigKeyName:
                                type: string
                                description: The TSIG Key name configured in the DNS.
                                  If ""tsigSecretSecretRef"" is defined, this field
                                  is required.
                              tsigSecretSecretRef:
                                type: object
                                description: The name of the secret containing the
                                  TSIG value. If ""tsigKeyName"" is defined, this
                                  field is required.
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                            required:
                            - nameserver
                          route53:
                            type: object
                            description: ACMEIssuerDNS01ProviderRoute53 is a structure
                              containing the Route 53 configuration for AWS
                            properties:
                              accessKeyID:
                                type: string
                                description: 'The AccessKeyID is used for authentication.
                                  If not set we fall-back to using env vars, shared
                                  credentials file or AWS Instance metadata see: https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials'
                              hostedZoneID:
                                type: string
                                description: If set, the provider will manage only
                                  this zone in Route53 and will not do an lookup using
                                  the route53:ListHostedZonesByName api call.
                              region:
                                type: string
                                description: Always set the region when using AccessKeyID
                                  and SecretAccessKey
                              role:
                                type: string
                                description: Role is a Role ARN which the Route53
                                  provider will assume using either the explicit credentials
                                  AccessKeyID/SecretAccessKey or the inferred credentials
                                  from environment variables, shared credentials file
                                  or AWS Instance metadata
                              secretAccessKeySecretRef:
                                type: object
                                description: The SecretAccessKey is used for authentication.
                                  If not set we fall-back to using env vars, shared
                                  credentials file or AWS Instance metadata https://docs.aws.amazon.com/sdk-for-go/v1/developer-guide/configuring-sdk.html#specifying-credentials
                                properties:
                                  name:
                                    type: string
                                    description: 'Name of the referent. More info:
                                      https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                      TODO: Add other useful fields. apiVersion, kind,
                                      uid?'
                                  key:
                                    type: string
                                    description: The key of the secret to select from.
                                      Must be a valid secret key.
                                required:
                                - name
                            required:
                            - region
                          webhook:
                            type: object
                            description: ACMEIssuerDNS01ProviderWebhook specifies
                              configuration for a webhook DNS01 provider, including
                              where to POST ChallengePayload resources.
                            properties:
                              config:
                                description: Additional configuration that should
                                  be passed to the webhook apiserver when challenges
                                  are processed. This can contain arbitrary JSON data.
                                  Secret values should not be specified in this stanza.
                                  If secret values are needed (e.g. credentials for
                                  a DNS service), you should use a SecretKeySelector
                                  to reference a Secret resource. For details on the
                                  schema of this field, consult the webhook provider
                                  implementation's documentation.
                                x-kubernetes-preserve-unknown-fields: true
                              groupName:
                                type: string
                                description: The API group name that should be used
                                  when POSTing ChallengePayload resources to the webhook
                                  apiserver. This should be the same as the GroupName
                                  specified in the webhook provider implementation.
                              solverName:
                                type: string
                                description: The name of the solver to use, as defined
                                  in the webhook provider implementation. This will
                                  typically be the name of the provider, e.g. 'cloudflare'.
                            required:
                            - groupName
                            - solverName
                      http01:
                        type: object
                        description: ACMEChallengeSolverHTTP01 contains configuration
                          detailing how to solve HTTP01 challenges within a Kubernetes
                          cluster. Typically this is accomplished through creating
                          'routes' of some description that configure ingress controllers
                          to direct traffic to 'solver pods', which are responsible
                          for responding to the ACME server's HTTP requests.
                        properties:
                          ingress:
                            type: object
                            description: The ingress based HTTP01 challenge solver
                              will solve challenges by creating or modifying Ingress
                              resources in order to route requests for '/.well-known/acme-challenge/XYZ'
                              to 'challenge solver' pods that are provisioned by cert-manager
                              for each Challenge to be completed.
                            properties:
                              name:
                                type: string
                                description: The name of the ingress resource that
                                  should have ACME challenge solving routes inserted
                                  into it in order to solve HTTP01 challenges. This
                                  is typically used in conjunction with ingress controllers
                                  like ingress-gce, which maintains a 1:1 mapping
                                  between external IPs and ingress resources.
                              class:
                                type: string
                                description: The ingress class to use when creating
                                  Ingress resources to solve ACME challenges that
                                  use this challenge solver. Only one of 'class' or
                                  'name' may be specified.
                              podTemplate:
                                type: object
                                description: Optional pod template used to configure
                                  the ACME challenge solver pods used for HTTP01 challenges
                                properties:
                                  metadata:
                                    type: object
                                    description: ObjectMeta overrides for the pod
                                      used to solve HTTP01 challenges. Only the 'labels'
                                      and 'annotations' fields may be set. If labels
                                      or annotations overlap with in-built values,
                                      the values here will override the in-built values.
                                  spec:
                                    type: object
                                    description: PodSpec defines overrides for the
                                      HTTP01 challenge solver pod. Only the 'nodeSelector',
                                      'affinity' and 'tolerations' fields are supported
                                      currently. All other fields will be ignored.
                                    properties:
                                      nodeSelector:
                                        type: object
                                        additionalProperties:
                                          type: string
                                        description: 'NodeSelector is a selector which
                                          must be true for the pod to fit on a node.
                                          Selector which must match a node''s labels
                                          for the pod to be scheduled on that node.
                                          More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/'
                                      affinity:
                                        type: object
                                        description: If specified, the pod's scheduling
                                          constraints
                                        properties:
                                          nodeAffinity:
                                            type: object
                                            description: Describes node affinity scheduling
                                              rules for the pod.
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                type: array
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified
                                                  by this field, but it may choose
                                                  a node that violates one or more
                                                  of the expressions. The node that
                                                  is most preferred is the one with
                                                  the greatest sum of weights, i.e.
                                                  for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling
                                                  affinity expressions, etc.), compute
                                                  a sum by iterating through the elements
                                                  of this field and adding "weight"
                                                  to the sum if the node matches the
                                                  corresponding matchExpressions;
                                                  the node(s) with the highest sum
                                                  are the most preferred.
                                                items:
                                                  type: object
                                                  description: An empty preferred
                                                    scheduling term matches all objects
                                                    with implicit weight 0 (i.e. it's
                                                    a no-op). A null preferred scheduling
                                                    term matches no objects (i.e.
                                                    is also a no-op).
                                                  properties:
                                                    preference:
                                                      type: object
                                                      description: A node selector
                                                        term, associated with the
                                                        corresponding weight.
                                                      properties:
                                                        matchExpressions:
                                                          type: array
                                                          description: A list of node
                                                            selector requirements
                                                            by node's labels.
                                                          items:
                                                            type: object
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                type: string
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                              operator:
                                                                type: string
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists,
                                                                  DoesNotExist. Gt,
                                                                  and Lt.
                                                              values:
                                                                type: array
                                                                description: An array
                                                                  of string values.
                                                                  If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. If
                                                                  the operator is
                                                                  Gt or Lt, the values
                                                                  array must have
                                                                  a single element,
                                                                  which will be interpreted
                                                                  as an integer. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                            required:
                                                            - key
                                                            - operator
                                                        matchFields:
                                                          type: array
                                                          description: A list of node
                                                            selector requirements
                                                            by node's fields.
                                                          items:
                                                            type: object
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                type: string
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                              operator:
                                                                type: string
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists,
                                                                  DoesNotExist. Gt,
                                                                  and Lt.
                                                              values:
                                                                type: array
                                                                description: An array
                                                                  of string values.
                                                                  If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. If
                                                                  the operator is
                                                                  Gt or Lt, the values
                                                                  array must have
                                                                  a single element,
                                                                  which will be interpreted
                                                                  as an integer. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                            required:
                                                            - key
                                                            - operator
                                                    weight:
                                                      type: integer
                                                      description: Weight associated
                                                        with matching the corresponding
                                                        nodeSelectorTerm, in the range
                                                        1-100.
                                                      format: int32
                                                  required:
                                                  - preference
                                                  - weight
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                type: object
                                                description: If the affinity requirements
                                                  specified by this field are not
                                                  met at scheduling time, the pod
                                                  will not be scheduled onto the node.
                                                  If the affinity requirements specified
                                                  by this field cease to be met at
                                                  some point during pod execution
                                                  (e.g. due to an update), the system
                                                  may or may not try to eventually
                                                  evict the pod from its node.
                                                properties:
                                                  nodeSelectorTerms:
                                                    type: array
                                                    description: Required. A list
                                                      of node selector terms. The
                                                      terms are ORed.
                                                    items:
                                                      type: object
                                                      description: A null or empty
                                                        node selector term matches
                                                        no objects. The requirements
                                                        of them are ANDed. The TopologySelectorTerm
                                                        type implements a subset of
                                                        the NodeSelectorTerm.
                                                      properties:
                                                        matchExpressions:
                                                          type: array
                                                          description: A list of node
                                                            selector requirements
                                                            by node's labels.
                                                          items:
                                                            type: object
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                type: string
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                              operator:
                                                                type: string
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists,
                                                                  DoesNotExist. Gt,
                                                                  and Lt.
                                                              values:
                                                                type: array
                                                                description: An array
                                                                  of string values.
                                                                  If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. If
                                                                  the operator is
                                                                  Gt or Lt, the values
                                                                  array must have
                                                                  a single element,
                                                                  which will be interpreted
                                                                  as an integer. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                            required:
                                                            - key
                                                            - operator
                                                        matchFields:
                                                          type: array
                                                          description: A list of node
                                                            selector requirements
                                                            by node's fields.
                                                          items:
                                                            type: object
                                                            description: A node selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                type: string
                                                                description: The label
                                                                  key that the selector
                                                                  applies to.
                                                              operator:
                                                                type: string
                                                                description: Represents
                                                                  a key's relationship
                                                                  to a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists,
                                                                  DoesNotExist. Gt,
                                                                  and Lt.
                                                              values:
                                                                type: array
                                                                description: An array
                                                                  of string values.
                                                                  If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. If
                                                                  the operator is
                                                                  Gt or Lt, the values
                                                                  array must have
                                                                  a single element,
                                                                  which will be interpreted
                                                                  as an integer. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                            required:
                                                            - key
                                                            - operator
                                                required:
                                                - nodeSelectorTerms
                                          podAffinity:
                                            type: object
                                            description: Describes pod affinity scheduling
                                              rules (e.g. co-locate this pod in the
                                              same node, zone, etc. as some other
                                              pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                type: array
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the affinity expressions specified
                                                  by this field, but it may choose
                                                  a node that violates one or more
                                                  of the expressions. The node that
                                                  is most preferred is the one with
                                                  the greatest sum of weights, i.e.
                                                  for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling
                                                  affinity expressions, etc.), compute
                                                  a sum by iterating through the elements
                                                  of this field and adding "weight"
                                                  to the sum if the node has pods
                                                  which matches the corresponding
                                                  podAffinityTerm; the node(s) with
                                                  the highest sum are the most preferred.
                                                items:
                                                  type: object
                                                  description: The weights of all
                                                    of the matched WeightedPodAffinityTerm
                                                    fields are added per-node to find
                                                    the most preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      type: object
                                                      description: Required. A pod
                                                        affinity term, associated
                                                        with the corresponding weight.
                                                      properties:
                                                        labelSelector:
                                                          type: object
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              type: array
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                type: object
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    type: string
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                  operator:
                                                                    type: string
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                  values:
                                                                    type: array
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                required:
                                                                - key
                                                                - operator
                                                            matchLabels:
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                        namespaces:
                                                          type: array
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                        topologyKey:
                                                          type: string
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                      required:
                                                      - topologyKey
                                                    weight:
                                                      type: integer
                                                      description: weight associated
                                                        with matching the corresponding
                                                        podAffinityTerm, in the range
                                                        1-100.
                                                      format: int32
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                type: array
                                                description: If the affinity requirements
                                                  specified by this field are not
                                                  met at scheduling time, the pod
                                                  will not be scheduled onto the node.
                                                  If the affinity requirements specified
                                                  by this field cease to be met at
                                                  some point during pod execution
                                                  (e.g. due to a pod label update),
                                                  the system may or may not try to
                                                  eventually evict the pod from its
                                                  node. When there are multiple elements,
                                                  the lists of nodes corresponding
                                                  to each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  type: object
                                                  description: Defines a set of pods
                                                    (namely those matching the labelSelector
                                                    relative to the given namespace(s))
                                                    that this pod should be co-located
                                                    (affinity) or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value
                                                    of the label with key <topologyKey>
                                                    matches that of any node on which
                                                    a pod of the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      type: object
                                                      description: A label query over
                                                        a set of resources, in this
                                                        case pods.
                                                      properties:
                                                        matchExpressions:
                                                          type: array
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            type: object
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                type: string
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                              operator:
                                                                type: string
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                              values:
                                                                type: array
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                            required:
                                                            - key
                                                            - operator
                                                        matchLabels:
                                                          type: object
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                    namespaces:
                                                      type: array
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                    topologyKey:
                                                      type: string
                                                      description: This pod should
                                                        be co-located (affinity) or
                                                        not co-located (anti-affinity)
                                                        with the pods matching the
                                                        labelSelector in the specified
                                                        namespaces, where co-located
                                                        is defined as running on a
                                                        node whose value of the label
                                                        with key topologyKey matches
                                                        that of any node on which
                                                        any of the selected pods is
                                                        running. Empty topologyKey
                                                        is not allowed.
                                                  required:
                                                  - topologyKey
                                          podAntiAffinity:
                                            type: object
                                            description: Describes pod anti-affinity
                                              scheduling rules (e.g. avoid putting
                                              this pod in the same node, zone, etc.
                                              as some other pod(s)).
                                            properties:
                                              preferredDuringSchedulingIgnoredDuringExecution:
                                                type: array
                                                description: The scheduler will prefer
                                                  to schedule pods to nodes that satisfy
                                                  the anti-affinity expressions specified
                                                  by this field, but it may choose
                                                  a node that violates one or more
                                                  of the expressions. The node that
                                                  is most preferred is the one with
                                                  the greatest sum of weights, i.e.
                                                  for each node that meets all of
                                                  the scheduling requirements (resource
                                                  request, requiredDuringScheduling
                                                  anti-affinity expressions, etc.),
                                                  compute a sum by iterating through
                                                  the elements of this field and adding
                                                  "weight" to the sum if the node
                                                  has pods which matches the corresponding
                                                  podAffinityTerm; the node(s) with
                                                  the highest sum are the most preferred.
                                                items:
                                                  type: object
                                                  description: The weights of all
                                                    of the matched WeightedPodAffinityTerm
                                                    fields are added per-node to find
                                                    the most preferred node(s)
                                                  properties:
                                                    podAffinityTerm:
                                                      type: object
                                                      description: Required. A pod
                                                        affinity term, associated
                                                        with the corresponding weight.
                                                      properties:
                                                        labelSelector:
                                                          type: object
                                                          description: A label query
                                                            over a set of resources,
                                                            in this case pods.
                                                          properties:
                                                            matchExpressions:
                                                              type: array
                                                              description: matchExpressions
                                                                is a list of label
                                                                selector requirements.
                                                                The requirements are
                                                                ANDed.
                                                              items:
                                                                type: object
                                                                description: A label
                                                                  selector requirement
                                                                  is a selector that
                                                                  contains values,
                                                                  a key, and an operator
                                                                  that relates the
                                                                  key and values.
                                                                properties:
                                                                  key:
                                                                    type: string
                                                                    description: key
                                                                      is the label
                                                                      key that the
                                                                      selector applies
                                                                      to.
                                                                  operator:
                                                                    type: string
                                                                    description: operator
                                                                      represents a
                                                                      key's relationship
                                                                      to a set of
                                                                      values. Valid
                                                                      operators are
                                                                      In, NotIn, Exists
                                                                      and DoesNotExist.
                                                                  values:
                                                                    type: array
                                                                    description: values
                                                                      is an array
                                                                      of string values.
                                                                      If the operator
                                                                      is In or NotIn,
                                                                      the values array
                                                                      must be non-empty.
                                                                      If the operator
                                                                      is Exists or
                                                                      DoesNotExist,
                                                                      the values array
                                                                      must be empty.
                                                                      This array is
                                                                      replaced during
                                                                      a strategic
                                                                      merge patch.
                                                                    items:
                                                                      type: string
                                                                required:
                                                                - key
                                                                - operator
                                                            matchLabels:
                                                              type: object
                                                              additionalProperties:
                                                                type: string
                                                              description: matchLabels
                                                                is a map of {key,value}
                                                                pairs. A single {key,value}
                                                                in the matchLabels
                                                                map is equivalent
                                                                to an element of matchExpressions,
                                                                whose key field is
                                                                "key", the operator
                                                                is "In", and the values
                                                                array contains only
                                                                "value". The requirements
                                                                are ANDed.
                                                        namespaces:
                                                          type: array
                                                          description: namespaces
                                                            specifies which namespaces
                                                            the labelSelector applies
                                                            to (matches against);
                                                            null or empty list means
                                                            "this pod's namespace"
                                                          items:
                                                            type: string
                                                        topologyKey:
                                                          type: string
                                                          description: This pod should
                                                            be co-located (affinity)
                                                            or not co-located (anti-affinity)
                                                            with the pods matching
                                                            the labelSelector in the
                                                            specified namespaces,
                                                            where co-located is defined
                                                            as running on a node whose
                                                            value of the label with
                                                            key topologyKey matches
                                                            that of any node on which
                                                            any of the selected pods
                                                            is running. Empty topologyKey
                                                            is not allowed.
                                                      required:
                                                      - topologyKey
                                                    weight:
                                                      type: integer
                                                      description: weight associated
                                                        with matching the corresponding
                                                        podAffinityTerm, in the range
                                                        1-100.
                                                      format: int32
                                                  required:
                                                  - podAffinityTerm
                                                  - weight
                                              requiredDuringSchedulingIgnoredDuringExecution:
                                                type: array
                                                description: If the anti-affinity
                                                  requirements specified by this field
                                                  are not met at scheduling time,
                                                  the pod will not be scheduled onto
                                                  the node. If the anti-affinity requirements
                                                  specified by this field cease to
                                                  be met at some point during pod
                                                  execution (e.g. due to a pod label
                                                  update), the system may or may not
                                                  try to eventually evict the pod
                                                  from its node. When there are multiple
                                                  elements, the lists of nodes corresponding
                                                  to each podAffinityTerm are intersected,
                                                  i.e. all terms must be satisfied.
                                                items:
                                                  type: object
                                                  description: Defines a set of pods
                                                    (namely those matching the labelSelector
                                                    relative to the given namespace(s))
                                                    that this pod should be co-located
                                                    (affinity) or not co-located (anti-affinity)
                                                    with, where co-located is defined
                                                    as running on a node whose value
                                                    of the label with key <topologyKey>
                                                    matches that of any node on which
                                                    a pod of the set of pods is running
                                                  properties:
                                                    labelSelector:
                                                      type: object
                                                      description: A label query over
                                                        a set of resources, in this
                                                        case pods.
                                                      properties:
                                                        matchExpressions:
                                                          type: array
                                                          description: matchExpressions
                                                            is a list of label selector
                                                            requirements. The requirements
                                                            are ANDed.
                                                          items:
                                                            type: object
                                                            description: A label selector
                                                              requirement is a selector
                                                              that contains values,
                                                              a key, and an operator
                                                              that relates the key
                                                              and values.
                                                            properties:
                                                              key:
                                                                type: string
                                                                description: key is
                                                                  the label key that
                                                                  the selector applies
                                                                  to.
                                                              operator:
                                                                type: string
                                                                description: operator
                                                                  represents a key's
                                                                  relationship to
                                                                  a set of values.
                                                                  Valid operators
                                                                  are In, NotIn, Exists
                                                                  and DoesNotExist.
                                                              values:
                                                                type: array
                                                                description: values
                                                                  is an array of string
                                                                  values. If the operator
                                                                  is In or NotIn,
                                                                  the values array
                                                                  must be non-empty.
                                                                  If the operator
                                                                  is Exists or DoesNotExist,
                                                                  the values array
                                                                  must be empty. This
                                                                  array is replaced
                                                                  during a strategic
                                                                  merge patch.
                                                                items:
                                                                  type: string
                                                            required:
                                                            - key
                                                            - operator
                                                        matchLabels:
                                                          type: object
                                                          additionalProperties:
                                                            type: string
                                                          description: matchLabels
                                                            is a map of {key,value}
                                                            pairs. A single {key,value}
                                                            in the matchLabels map
                                                            is equivalent to an element
                                                            of matchExpressions, whose
                                                            key field is "key", the
                                                            operator is "In", and
                                                            the values array contains
                                                            only "value". The requirements
                                                            are ANDed.
                                                    namespaces:
                                                      type: array
                                                      description: namespaces specifies
                                                        which namespaces the labelSelector
                                                        applies to (matches against);
                                                        null or empty list means "this
                                                        pod's namespace"
                                                      items:
                                                        type: string
                                                    topologyKey:
                                                      type: string
                                                      description: This pod should
                                                        be co-located (affinity) or
                                                        not co-located (anti-affinity)
                                                        with the pods matching the
                                                        labelSelector in the specified
                                                        namespaces, where co-located
                                                        is defined as running on a
                                                        node whose value of the label
                                                        with key topologyKey matches
                                                        that of any node on which
                                                        any of the selected pods is
                                                        running. Empty topologyKey
                                                        is not allowed.
                                                  required:
                                                  - topologyKey
                                      tolerations:
                                        type: array
                                        description: If specified, the pod's tolerations.
                                        items:
                                          type: object
                                          description: The pod this Toleration is
                                            attached to tolerates any taint that matches
                                            the triple <key,value,effect> using the
                                            matching operator <operator>.
                                          properties:
                                            value:
                                              type: string
                                              description: Value is the taint value
                                                the toleration matches to. If the
                                                operator is Exists, the value should
                                                be empty, otherwise just a regular
                                                string.
                                            effect:
                                              type: string
                                              description: Effect indicates the taint
                                                effect to match. Empty means match
                                                all taint effects. When specified,
                                                allowed values are NoSchedule, PreferNoSchedule
                                                and NoExecute.
                                            key:
                                              type: string
                                              description: Key is the taint key that
                                                the toleration applies to. Empty means
                                                match all taint keys. If the key is
                                                empty, operator must be Exists; this
                                                combination means to match all values
                                                and all keys.
                                            operator:
                                              type: string
                                              description: Operator represents a key's
                                                relationship to the value. Valid operators
                                                are Exists and Equal. Defaults to
                                                Equal. Exists is equivalent to wildcard
                                                for value, so that a pod can tolerate
                                                all taints of a particular category.
                                            tolerationSeconds:
                                              type: integer
                                              description: TolerationSeconds represents
                                                the period of time the toleration
                                                (which must be of effect NoExecute,
                                                otherwise this field is ignored) tolerates
                                                the taint. By default, it is not set,
                                                which means tolerate the taint forever
                                                (do not evict). Zero and negative
                                                values will be treated as 0 (evict
                                                immediately) by the system.
                                              format: int64
                              serviceType:
                                type: string
                                description: Optional service type for Kubernetes
                                  solver service
              required:
              - privateKeySecretRef
              - server
            ca:
              type: object
              properties:
                secretName:
                  type: string
                  description: SecretName is the name of the secret used to sign Certificates
                    issued by this Issuer.
              required:
              - secretName
            selfSigned:
              type: object
            vault:
              type: object
              properties:
                auth:
                  type: object
                  description: Vault authentication
                  properties:
                    appRole:
                      type: object
                      description: This Secret contains a AppRole and Secret
                      properties:
                        secretRef:
                          type: object
                          properties:
                            name:
                              type: string
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                            key:
                              type: string
                              description: The key of the secret to select from. Must
                                be a valid secret key.
                          required:
                          - name
                        path:
                          type: string
                          description: Where the authentication path is mounted in
                            Vault.
                        roleId:
                          type: string
                      required:
                      - path
                      - roleId
                      - secretRef
                    kubernetes:
                      type: object
                      description: This contains a Role and Secret with a ServiceAccount
                        token to authenticate with vault.
                      properties:
                        mountPath:
                          type: string
                          description: The value here will be used as part of the
                            path used when authenticating with vault, for example
                            if you set a value of "foo", the path used will be "/v1/auth/foo/login".
                            If unspecified, the default value "kubernetes" will be
                            used.
                        secretRef:
                          type: object
                          description: The required Secret field containing a Kubernetes
                            ServiceAccount JWT used for authenticating with Vault.
                            Use of 'ambient credentials' is not supported.
                          properties:
                            name:
                              type: string
                              description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                TODO: Add other useful fields. apiVersion, kind, uid?'
                            key:
                              type: string
                              description: The key of the secret to select from. Must
                                be a valid secret key.
                          required:
                          - name
                        role:
                          type: string
                          description: A required field containing the Vault Role
                            to assume. A Role binds a Kubernetes ServiceAccount with
                            a set of Vault policies.
                      required:
                      - role
                      - secretRef
                    tokenSecretRef:
                      type: object
                      description: This Secret contains the Vault token key
                      properties:
                        name:
                          type: string
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                        key:
                          type: string
                          description: The key of the secret to select from. Must
                            be a valid secret key.
                      required:
                      - name
                caBundle:
                  type: string
                  description: Base64 encoded CA bundle to validate Vault server certificate.
                    Only used if the Server URL is using HTTPS protocol. This parameter
                    is ignored for plain HTTP protocol connection. If not set the
                    system root certificates are used to validate the TLS connection.
                  format: byte
                path:
                  type: string
                  description: Vault URL path to the certificate role
                server:
                  type: string
                  description: Server is the vault connection address
              required:
              - auth
              - path
              - server
            venafi:
              type: object
              description: VenafiIssuer describes issuer configuration details for
                Venafi Cloud.
              properties:
                cloud:
                  type: object
                  description: Cloud specifies the Venafi cloud configuration settings.
                    Only one of TPP or Cloud may be specified.
                  properties:
                    apiTokenSecretRef:
                      type: object
                      description: APITokenSecretRef is a secret key selector for
                        the Venafi Cloud API token.
                      properties:
                        name:
                          type: string
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                        key:
                          type: string
                          description: The key of the secret to select from. Must
                            be a valid secret key.
                      required:
                      - name
                    url:
                      type: string
                      description: URL is the base URL for Venafi Cloud
                  required:
                  - apiTokenSecretRef
                  - url
                tpp:
                  type: object
                  description: TPP specifies Trust Protection Platform configuration
                    settings. Only one of TPP or Cloud may be specified.
                  properties:
                    caBundle:
                      type: string
                      description: CABundle is a PEM encoded TLS certifiate to use
                        to verify connections to the TPP instance. If specified, system
                        roots will not be used and the issuing CA for the TPP instance
                        must be verifiable using the provided root. If not specified,
                        the connection will be verified using the cert-manager system
                        root certificates.
                      format: byte
                    credentialsRef:
                      type: object
                      description: CredentialsRef is a reference to a Secret containing
                        the username and password for the TPP server. The secret must
                        contain two keys, 'username' and 'password'.
                      properties:
                        name:
                          type: string
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                            TODO: Add other useful fields. apiVersion, kind, uid?'
                      required:
                      - name
                    url:
                      type: string
                      description: URL is the base URL for the Venafi TPP instance
                  required:
                  - credentialsRef
                  - url
                zone:
                  type: string
                  description: Zone is the Venafi Policy Zone to use for this issuer.
                    All requests made to the Venafi platform will be restricted by
                    the named zone policy. This field is required.
              required:
              - zone
        status:
          type: object
          description: IssuerStatus contains status information about an Issuer
          properties:
            acme:
              type: object
              properties:
                lastRegisteredEmail:
                  type: string
                  description: LastRegisteredEmail is the email associated with the
                    latest registered ACME account, in order to track changes made
                    to registered account associated with the  Issuer
                uri:
                  type: string
                  description: URI is the unique account identifier, which can also
                    be used to retrieve account details from the CA
            conditions:
              type: array
              items:
                type: object
                description: IssuerCondition contains condition information for an
                  Issuer.
                properties:
                  type:
                    type: string
                    description: Type of the condition, currently ('Ready').
                  status:
                    type: string
                    description: Status of the condition, one of ('True', 'False',
                      'Unknown').
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                  lastTransitionTime:
                    type: string
                    description: LastTransitionTime is the timestamp corresponding
                      to the last status change of this condition.
                    format: date-time
                  message:
                    type: string
                    description: Message is a human readable description of the details
                      of the last transition, complementing reason.
                  reason:
                    type: string
                    description: Reason is a brief machine readable explanation for
                      the condition's last transition.
                required:
                - status
                - type
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
