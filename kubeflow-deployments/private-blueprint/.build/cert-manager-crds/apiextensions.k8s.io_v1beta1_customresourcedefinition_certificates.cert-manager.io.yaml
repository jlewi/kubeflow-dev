apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: certificates.cert-manager.io
spec:
  additionalPrinterColumns:
  - name: Ready
    type: string
    JSONPath: .status.conditions[?(@.type=="Ready")].status
  - name: Secret
    type: string
    JSONPath: .spec.secretName
  - name: Issuer
    type: string
    priority: 1
    JSONPath: .spec.issuerRef.name
  - name: Status
    type: string
    priority: 1
    JSONPath: .status.conditions[?(@.type=="Ready")].message
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
    description: CreationTimestamp is a timestamp representing the server time when
      this object was created. It is not guaranteed to be set in happens-before order
      across separate operations. Clients may not set this value. It is represented
      in RFC3339 form and is in UTC.
  group: cert-manager.io
  names:
    kind: Certificate
    listKind: CertificateList
    plural: certificates
    shortNames:
    - cert
    - certs
    singular: certificate
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      type: object
      description: Certificate is a type to represent a Certificate from ACME
      properties:
        apiVersion:
          type: string
          description: 'APIVersion defines the versioned schema of this representation
            of an object. Servers should convert recognized schemas to the latest
            internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
        kind:
          type: string
          description: 'Kind is a string value representing the REST resource this
            object represents. Servers may infer this from the endpoint the client
            submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
        metadata:
          type: object
        spec:
          type: object
          description: CertificateSpec defines the desired state of Certificate. A
            valid Certificate requires at least one of a CommonName, DNSName, or URISAN
            to be valid.
          properties:
            commonName:
              type: string
              description: CommonName is a common name to be used on the Certificate.
                The CommonName should have a length of 64 characters or fewer to avoid
                generating invalid CSRs.
            dnsNames:
              type: array
              description: DNSNames is a list of subject alt names to be used on the
                Certificate.
              items:
                type: string
            duration:
              type: string
              description: Certificate default Duration
            ipAddresses:
              type: array
              description: IPAddresses is a list of IP addresses to be used on the
                Certificate
              items:
                type: string
            isCA:
              type: boolean
              description: IsCA will mark this Certificate as valid for signing. This
                implies that the 'cert sign' usage is set
            issuerRef:
              type: object
              description: IssuerRef is a reference to the issuer for this certificate.
                If the 'kind' field is not set, or set to 'Issuer', an Issuer resource
                with the given name in the same namespace as the Certificate will
                be used. If the 'kind' field is set to 'ClusterIssuer', a ClusterIssuer
                with the provided name will be used. The 'name' field in this stanza
                is required at all times.
              properties:
                name:
                  type: string
                kind:
                  type: string
                group:
                  type: string
              required:
              - name
            keyAlgorithm:
              type: string
              description: KeyAlgorithm is the private key algorithm of the corresponding
                private key for this certificate. If provided, allowed values are
                either "rsa" or "ecdsa" If KeyAlgorithm is specified and KeySize is
                not provided, key size of 256 will be used for "ecdsa" key algorithm
                and key size of 2048 will be used for "rsa" key algorithm.
              enum:
              - rsa
              - ecdsa
            keyEncoding:
              type: string
              description: KeyEncoding is the private key cryptography standards (PKCS)
                for this certificate's private key to be encoded in. If provided,
                allowed values are "pkcs1" and "pkcs8" standing for PKCS#1 and PKCS#8,
                respectively. If KeyEncoding is not specified, then PKCS#1 will be
                used by default.
              enum:
              - pkcs1
              - pkcs8
            keySize:
              type: integer
              description: KeySize is the key bit size of the corresponding private
                key for this certificate. If provided, value must be between 2048
                and 8192 inclusive when KeyAlgorithm is empty or is set to "rsa",
                and value must be one of (256, 384, 521) when KeyAlgorithm is set
                to "ecdsa".
            organization:
              type: array
              description: Organization is the organization to be used on the Certificate
              items:
                type: string
            renewBefore:
              type: string
              description: Certificate renew before expiration duration
            secretName:
              type: string
              description: SecretName is the name of the secret resource to store
                this secret in
            uriSANs:
              type: array
              description: URISANs is a list of URI Subject Alternative Names to be
                set on this Certificate.
              items:
                type: string
            usages:
              type: array
              description: Usages is the set of x509 actions that are enabled for
                a given key. Defaults are ('digital signature', 'key encipherment')
                if empty
              items:
                type: string
                description: 'KeyUsage specifies valid usage contexts for keys. See:
                  https://tools.ietf.org/html/rfc5280#section-4.2.1.3      https://tools.ietf.org/html/rfc5280#section-4.2.1.12'
                enum:
                - signing
                - digital signature
                - content commitment
                - key encipherment
                - key agreement
                - data encipherment
                - cert sign
                - crl sign
                - encipher only
                - decipher only
                - any
                - server auth
                - client auth
                - code signing
                - email protection
                - s/mime
                - ipsec end system
                - ipsec tunnel
                - ipsec user
                - timestamping
                - ocsp signing
                - microsoft sgc
                - netscape sgc
          required:
          - issuerRef
          - secretName
        status:
          type: object
          description: CertificateStatus defines the observed state of Certificate
          properties:
            conditions:
              type: array
              items:
                type: object
                description: CertificateCondition contains condition information for
                  an Certificate.
                properties:
                  type:
                    type: string
                    description: Type of the condition, currently ('Ready').
                  status:
                    type: string
                    description: Status of the condition, one of ('True', 'False',
                      'Unknown').
                    enum:
                    - "True"
                    - "False"
                    - Unknown
                  lastTransitionTime:
                    type: string
                    description: LastTransitionTime is the timestamp corresponding
                      to the last status change of this condition.
                    format: date-time
                  message:
                    type: string
                    description: Message is a human readable description of the details
                      of the last transition, complementing reason.
                  reason:
                    type: string
                    description: Reason is a brief machine readable explanation for
                      the condition's last transition.
                required:
                - status
                - type
            lastFailureTime:
              type: string
              format: date-time
            notAfter:
              type: string
              description: The expiration time of the certificate stored in the secret
                named by this resource in spec.secretName.
              format: date-time
  version: v1alpha2
  versions:
  - name: v1alpha2
    served: true
    storage: true
