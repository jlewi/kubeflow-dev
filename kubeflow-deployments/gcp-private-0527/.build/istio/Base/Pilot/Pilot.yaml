apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: metadata-exchange-1.4
  namespace: istio-system
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: ANY # inbound, outbound, and gateway
      listener:
        filterChain:
          filter:
            name: "envoy.http_connection_manager"
      proxy:
        proxyVersion: '1\.4.*'
    patch:
      value:
        name: envoy.filters.http.wasm
        config:
          config:
            configuration: envoy.wasm.metadata_exchange
            vm_config:
              code:
                inline_string: envoy.wasm.metadata_exchange
              runtime: envoy.wasm.runtime.null
      operation: INSERT_BEFORE
---
apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: stackdriver-filter-1.4
  namespace: istio-system
spec:
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_OUTBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.http_connection_manager"
            subFilter:
              name: "envoy.router"
      proxy:
        proxyVersion: '1\.4.*'
    patch:
      value:
        name: envoy.filters.http.wasm
        config:
          config:
            configuration: |
              {"enable_mesh_edges_reporting": true, "disable_server_access_logging": false, "meshEdgesReportingDuration": "600s"}
            root_id: stackdriver_outbound
            vm_config:
              code:
                inline_string: envoy.wasm.null.stackdriver
              runtime: envoy.wasm.runtime.null
              vm_id: stackdriver_outbound
      operation: INSERT_BEFORE
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_INBOUND
      listener:
        filterChain:
          filter:
            name: "envoy.http_connection_manager"
            subFilter:
              name: "envoy.router"
      proxy:
        proxyVersion: '1\.4.*'
    patch:
      value:
        name: envoy.filters.http.wasm
        config:
          config:
            configuration: |
              {"enable_mesh_edges_reporting": true, "disable_server_access_logging": false, "meshEdgesReportingDuration": "600s"}
            root_id: stackdriver_inbound
            vm_config:
              code:
                inline_string: envoy.wasm.null.stackdriver
              runtime: envoy.wasm.runtime.null
              vm_id: stackdriver_inbound
      operation: INSERT_BEFORE
  - applyTo: HTTP_FILTER
    match:
      context: GATEWAY
      listener:
        filterChain:
          filter:
            name: "envoy.http_connection_manager"
            subFilter:
              name: "envoy.router"
      proxy:
        proxyVersion: '1\.4.*'
    patch:
      value:
        name: envoy.filters.http.wasm
        config:
          config:
            configuration: |
              {"enable_mesh_edges_reporting": true, "disable_server_access_logging": false, "meshEdgesReportingDuration": "600s", "disable_host_header_fallback": true}
            root_id: stackdriver_outbound
            vm_config:
              code:
                inline_string: envoy.wasm.null.stackdriver
              runtime: envoy.wasm.runtime.null
              vm_id: stackdriver_outbound
      operation: INSERT_BEFORE
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: promsd-istio-system
rules:
- resources:
  - nodes
  - services
  - endpoints
  - pods
  - nodes/proxy
  apiGroups:
  - ""
  verbs:
  - get
  - list
  - watch
- resources:
  - configmaps
  apiGroups:
  - ""
  verbs:
  - get
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pilot-envoy-config
  namespace: istio-system
  labels:
    release: istio
data:
  envoy.yaml.tmpl: |-
    admin:
      access_log_path: /dev/null
      address:
        socket_address:
          address: 127.0.0.1
          port_value: 15000

    static_resources:
      clusters:
      - name: in.15010
        http2_protocol_options: {}
        connect_timeout: 1.000s

        hosts:
        - socket_address:
            address: 127.0.0.1
            port_value: 15010

        circuit_breakers:
          thresholds:
          - max_connections: 100000
            max_pending_requests: 100000
            max_requests: 100000
            max_retries: 3

    # TODO: telemetry using EDS
    # TODO: other pilots using EDS, load balancing
    # TODO: galley using EDS

      - name: out.galley.15019
        http2_protocol_options: {}
        connect_timeout: 1.000s
        type: STRICT_DNS

        circuit_breakers:
          thresholds:
            - max_connections: 100000
              max_pending_requests: 100000
              max_requests: 100000
              max_retries: 3
        hosts:
          - socket_address:
              address: istio-galley.istio-system
              port_value: 15019
        tls_context:
          common_tls_context:
            tls_certificate_sds_secret_configs:
            - name: default
              sds_config:
                api_config_source:
                  api_type: GRPC
                  grpc_services:
                  - google_grpc:
                      target_uri: unix:/var/run/sds/uds_path
                      channel_credentials:
                        local_credentials: {}
                      call_credentials:
                      - from_plugin:
                          name: envoy.grpc_credentials.file_based_metadata
                          config:
                            header_key: istio_sds_credentials_header-bin
                            secret_data:
                              filename: /var/run/secrets/tokens/istio-token
                      credentials_factory_name: envoy.grpc_credentials.file_based_metadata
                      stat_prefix: sdsstat
            combined_validation_context:
              default_validation_context:
                verify_subject_alt_name:
                - spiffe://gcp-private-dev.svc.id.goog/ns/istio-system/sa/istio-galley-service-account
              validation_context_sds_secret_config:
                name: ROOTCA
                sds_config:
                  api_config_source:
                    api_type: GRPC
                    grpc_services:
                    - google_grpc:
                        target_uri: unix:/var/run/sds/uds_path
                        channel_credentials:
                          local_credentials: {}
                        call_credentials:
                        - from_plugin:
                            name: envoy.grpc_credentials.file_based_metadata
                            config:
                              header_key: istio_sds_credentials_header-bin
                              secret_data:
                                filename: /var/run/secrets/tokens/istio-token
                        credentials_factory_name: envoy.grpc_credentials.file_based_metadata
                        stat_prefix: sdsstat

      listeners:
      - name: "in.15011"
        address:
          socket_address:
            address: 0.0.0.0
            port_value: 15011
        filter_chains:
        - filters:
          - name: envoy.http_connection_manager
            #typed_config
            #"@type": "type.googleapis.com/",
            config:
              codec_type: HTTP2
              stat_prefix: "15011"
              http2_protocol_options:
                max_concurrent_streams: 1073741824

              access_log:
              - name: envoy.file_access_log
                config:
                  path: /dev/stdout

              http_filters:
              - name: envoy.router

              route_config:
                name: "15011"

                virtual_hosts:
                - name: istio-pilot

                  domains:
                  - '*'

                  routes:
                  - match:
                      prefix: /
                    route:
                      cluster: in.15010
                      timeout: 0.000s
                    decorator:
                      operation: xDS
          tls_context:
            common_tls_context:
              alpn_protocols:
              - h2
              tls_certificate_sds_secret_configs:
              - name: default
                sds_config:
                  api_config_source:
                    api_type: GRPC
                    grpc_services:
                    - google_grpc:
                        target_uri: unix:/var/run/sds/uds_path
                        channel_credentials:
                          local_credentials: {}
                        call_credentials:
                        - from_plugin:
                            name: envoy.grpc_credentials.file_based_metadata
                            config:
                              header_key: istio_sds_credentials_header-bin
                              secret_data:
                                filename: /var/run/secrets/tokens/istio-token
                        credentials_factory_name: envoy.grpc_credentials.file_based_metadata
                        stat_prefix: sdsstat
              combined_validation_context:
                default_validation_context:
                  verify_subject_alt_name: []
                validation_context_sds_secret_config:
                  name: ROOTCA
                  sds_config:
                    api_config_source:
                      api_type: GRPC
                      grpc_services:
                      - google_grpc:
                          target_uri: unix:/var/run/sds/uds_path
                          channel_credentials:
                            local_credentials: {}
                          call_credentials:
                          - from_plugin:
                              name: envoy.grpc_credentials.file_based_metadata
                              config:
                                header_key: istio_sds_credentials_header-bin
                                secret_data:
                                  filename: /var/run/secrets/tokens/istio-token
                          credentials_factory_name: envoy.grpc_credentials.file_based_metadata
                          stat_prefix: sdsstat
            require_client_certificate: true


      # Manual 'whitebox' mode
      - name: "local.15019"
        address:
          socket_address:
            address: 127.0.0.1
            port_value: 15019
        filter_chains:
          - filters:
              - name: envoy.http_connection_manager
                config:
                  codec_type: HTTP2
                  stat_prefix: "15019"
                  http2_protocol_options:
                    max_concurrent_streams: 1073741824

                  access_log:
                    - name: envoy.file_access_log
                      config:
                        path: /dev/stdout

                  http_filters:
                    - name: envoy.router

                  route_config:
                    name: "15019"

                    virtual_hosts:
                      - name: istio-galley

                        domains:
                          - '*'

                        routes:
                          - match:
                              prefix: /
                            route:
                              cluster: out.galley.15019
                              timeout: 0.000s
---
# Resources for Pilot component
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: istio-pilot
  namespace: istio-system
  labels:
    app: pilot
    release: istio
spec:
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
  minReplicas: 1
  scaleTargetRef:
    name: istio-pilot
    apiVersion: apps/v1
    kind: Deployment
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promsd-sidecar
  namespace: istio-system
data:
  sidecar.yml: |-
    static_metadata:
    - metric: pilot_xds_pushes
      type: counter
    - metric: pilot_config_push_latency
      type: histogram
    - metric: pilot_xds_push_timeouts
      type: counter
    - metric: pilot_errors_xds
      type: counter
    - metric: pilot_errors_internal
      type: counter
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promsd-rules
  namespace: istio-system
data:
  rules.yml: |-
    groups:
    - name: recording_rules
      rules:
        - record: pilot_config_push_latency
          expr: pilot_proxy_convergence_time_bucket
        - record: pilot_xds_push_timeouts
          expr: pilot_xds_push_context_errors
        - record: pilot_errors_xds
          expr: >
            pilot_duplicate_envoy_clusters + pilot_conflict_outbound_listener_http_over_current_tcp
            + pilot_conflict_outbound_listener_http_over_https + pilot_conflict_outbound_listener_tcp_over_current_http
            + pilot_conflict_outbound_listener_tcp_over_current_tcp
            + pilot_eds_no_instances + pilot_endpoint_not_ready
            + pilot_total_xds_internal_errors + pilot_total_xds_rejects
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: promsd
  namespace: istio-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: istio-pilot-service-account
  namespace: istio-system
  labels:
    app: pilot
    release: istio
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: istio-pilot-istio-system
  labels:
    app: pilot
    release: istio
rules:
- resources: ["*"]
  apiGroups: ["config.istio.io"]
  verbs: ["*"]
- resources: ["*"]
  apiGroups: ["rbac.istio.io"]
  verbs: ["get", "watch", "list"]
- resources: ["*"]
  apiGroups: ["security.istio.io"]
  verbs: ["get", "watch", "list"]
- resources: ["*"]
  apiGroups: ["networking.istio.io"]
  verbs: ["*"]
- resources: ["*"]
  apiGroups: ["authentication.istio.io"]
  verbs: ["*"]
- resources: ["customresourcedefinitions"]
  apiGroups: ["apiextensions.k8s.io"]
  verbs: ["*"]
- resources: ["ingresses", "ingresses/status"]
  apiGroups: ["extensions"]
  verbs: ["*"]
- resources: ["configmaps"]
  apiGroups: [""]
  verbs: ["create", "get", "list", "watch", "update"]
- resources: ["endpoints", "pods", "services", "namespaces", "nodes", "secrets"]
  apiGroups: [""]
  verbs: ["get", "list", "watch"]
- resources: ["secrets"]
  apiGroups: [""]
  verbs: ["create", "get", "watch", "list", "update", "delete"]
- resources:
  - "certificatesigningrequests"
  - "certificatesigningrequests/approval"
  - "certificatesigningrequests/status"
  apiGroups: ["certificates.k8s.io"]
  verbs: ["update", "create", "get", "delete"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: istio
  namespace: istio-system
  labels:
    release: istio
data:
  mesh: |-
    # Set enableTracing to false to disable request tracing.
    enableTracing: true

    # Set accessLogFile to empty string to disable access log.
    accessLogFile: ""

    accessLogFormat: ""

    accessLogEncoding: 'TEXT'

    enableEnvoyAccessLogService: false
    # reportBatchMaxEntries is the number of requests that are batched before telemetry data is sent to the mixer server
    reportBatchMaxEntries: 100
    # reportBatchMaxTime is the max waiting time before the telemetry data of a request is sent to the mixer server
    reportBatchMaxTime: 1s
    disableMixerHttpReports: true

    disablePolicyChecks: true

    # Automatic protocol detection uses a set of heuristics to
    # determine whether the connection is using TLS or not (on the
    # server side), as well as the application protocol being used
    # (e.g., http vs tcp). These heuristics rely on the client sending
    # the first bits of data. For server first protocols like MySQL,
    # MongoDB, etc., Envoy will timeout on the protocol detection after
    # the specified period, defaulting to non mTLS plain TCP
    # traffic. Set this field to tweak the period that Envoy will wait
    # for the client to send the first bits of data. (MUST BE >=1ms)
    protocolDetectionTimeout: 0s

    # This is the k8s ingress service name, update if you used a different name
    ingressService: "istio-ingressgateway"
    ingressControllerMode: "OFF"
    ingressClass: "istio"

    # The trust domain corresponds to the trust root of a system.
    # Refer to https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE-ID.md#21-trust-domain
    trustDomain: "gcp-private-dev.svc.id.goog"

    #  The trust domain aliases represent the aliases of trust_domain.
    #  For example, if we have
    #  trustDomain: td1
    #  trustDomainAliases: [“td2”, "td3"]
    #  Any service with the identity "td1/ns/foo/sa/a-service-account", "td2/ns/foo/sa/a-service-account",
    #  or "td3/ns/foo/sa/a-service-account" will be treated the same in the Istio mesh.
    trustDomainAliases:
    # Unix Domain Socket through which envoy communicates with NodeAgent SDS to get
    # key/cert for mTLS. Use secret-mount files instead of SDS if set to empty.
    sdsUdsPath: "unix:/var/run/sds/uds_path"

    # If true, automatically configure client side mTLS settings to match the corresponding service's
    # server side mTLS authentication policy, when destination rule for that service does not specify
    # TLS settings.
    enableAutoMtls: false
    config_sources:
    - address: localhost:15019

    outboundTrafficPolicy:
      mode: ALLOW_ANY

    # Configures DNS certificates provisioned through Chiron linked into Pilot.
    # The DNS certificate provisioning is enabled by default now so it get tested.
    # TODO (lei-tang): we'll decide whether enable it by default or not before Istio 1.4 Release.
    certificates:
      - dnsNames:
        - istio-galley.istio-system.svc
        - istio-galley.istio-system
        secretName: dns.istio-galley-service-account
      - dnsNames:
        - istio-sidecar-injector.istio-system.svc
        - istio-sidecar-injector.istio-system
        secretName: dns.istio-sidecar-injector-service-account

    defaultConfig:
      #
      # TCP connection timeout between Envoy & the application, and between Envoys.
      connectTimeout: 10s
      #
      ### ADVANCED SETTINGS #############
      # Where should envoy's configuration be stored in the istio-proxy container
      configPath: "/etc/istio/proxy"
      # The pseudo service name used for Envoy.
      serviceCluster: istio-proxy
      # These settings that determine how long an old Envoy
      # process should be kept alive after an occasional reload.
      drainDuration: 45s
      parentShutdownDuration: 1m0s
      #
      # Port where Envoy listens (on local host) for admin commands
      # You can exec into the istio-proxy container in a pod and
      # curl the admin port (curl http://localhost:15000/) to obtain
      # diagnostic information from Envoy. See
      # https://lyft.github.io/envoy/docs/operations/admin.html
      # for more details
      proxyAdminPort: 15000
      #
      # Set concurrency to a specific number to control the number of Proxy worker threads.
      # If set to 0 (default), then start worker thread for each CPU thread/core.
      concurrency: 2
      #
      tracing:
        zipkin:
          # Address of the Zipkin collector
          address: zipkin.istio-system:9411
      #
      # Mutual TLS authentication between sidecars and istio control plane.
      controlPlaneAuthPolicy: MUTUAL_TLS
      #
      # Address where istio Pilot service is running
      discoveryAddress: istio-pilot.istio-system:15011
  meshNetworks: |-
    # Network config
    networks: {}
  values.yaml: |-
    appNamespaces: []
    autoscaleEnabled: true
    autoscaleMax: 5
    autoscaleMin: 1
    configMap: true
    configNamespace: istio-config
    cpu:
      targetAverageUtilization: 80
    enableProtocolSniffingForInbound: false
    enableProtocolSniffingForOutbound: false
    enabled: true
    env: {}
    image: pilot
    ingress:
      ingressClass: istio
      ingressControllerMode: "OFF"
      ingressService: istio-ingressgateway
    keepaliveMaxServerConnectionAge: 30m
    meshNetworks:
      networks: {}
    namespace: istio-system
    nodeSelector: {}
    plugins: []
    podAnnotations: {}
    podAntiAffinityLabelSelector: []
    podAntiAffinityTermLabelSelector: []
    policy:
      enabled: false
    replicaCount: 1
    resources:
      requests:
        cpu: 500m
        memory: 2048Mi
    rollingMaxSurge: 100%
    rollingMaxUnavailable: 25%
    tolerations: []
    traceSampling: 1
    useMCP: true
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: promsd-istio-system
  labels:
    addonmanager.kubernetes.io/mode: Reconcile
    k8s-app: istio
roleRef:
  name: promsd-istio-system
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: promsd
  namespace: istio-system
  kind: ServiceAccount
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: istio-pilot
  namespace: istio-system
  labels:
    app: pilot
    istio: pilot
    release: istio
spec:
  selector:
    matchLabels:
      istio: pilot
  template:
    metadata:
      labels:
        app: pilot
        chart: pilot
        heritage: Tiller
        istio: pilot
        release: istio
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: istio-pilot-service-account
      containers:
      - name: discovery
        image: gcr.io/gke-release/asm/pilot:1.4.7-asm.0
        args:
        - discovery
        - --monitoringAddr=:15014
        - --log_output_level=default:info
        - --domain
        - cluster.local
        - --secureGrpcAddr
        - ""
        - --trust-domain=gcp-private-dev.svc.id.goog
        - --keepaliveMaxServerConnectionAge
        - 30m
        ports:
        - containerPort: 8080
        - containerPort: 15010
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: PILOT_TRACE_SAMPLING
          value: "1"
        - name: CONFIG_NAMESPACE
          value: istio-config
        - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_OUTBOUND
          value: "false"
        - name: PILOT_ENABLE_PROTOCOL_SNIFFING_FOR_INBOUND
          value: "false"
        resources:
          requests:
            cpu: 2000m
            memory: 2048Mi
        volumeMounts:
        - name: config-volume
          mountPath: /etc/istio/config
        readinessProbe:
          httpGet:
            port: 8080
            path: /ready
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 5
        imagePullPolicy: IfNotPresent
      - name: istio-proxy
        image: gcr.io/gke-release/asm/proxyv2:1.4.7-asm.0
        args:
        - proxy
        - --domain
        - $(POD_NAMESPACE).svc.cluster.local
        - --serviceCluster
        - istio-pilot
        - --templateFile
        - /var/lib/envoy/envoy.yaml.tmpl
        - --controlPlaneAuthPolicy
        - MUTUAL_TLS
        - --trust-domain=gcp-private-dev.svc.id.goog
        ports:
        - containerPort: 15011
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: INSTANCE_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: SDS_ENABLED
          value: "true"
        resources:
          limits:
            cpu: 2000m
            memory: 1024Mi
          requests:
            cpu: 100m
            memory: 128Mi
        volumeMounts:
        - name: pilot-envoy-config
          mountPath: /var/lib/envoy
        - name: sds-uds-path
          readOnly: true
          mountPath: /var/run/sds
        - name: istio-token
          mountPath: /var/run/secrets/tokens
        imagePullPolicy: IfNotPresent
      volumes:
      - name: sds-uds-path
        hostPath:
          path: /var/run/sds
      - name: istio-token
        projected:
          sources:
          - serviceAccountToken:
              audience: gcp-private-dev.svc.id.goog
              expirationSeconds: 43200
              path: istio-token
      - name: config-volume
        configMap:
          name: istio
      - name: pilot-envoy-config
        configMap:
          name: pilot-envoy-config
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
  strategy:
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 25%
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: promsd
  namespace: istio-system
data:
  prometheus.yml: |-
    global:
      scrape_interval: 15s
    rule_files:
    - '/etc/prometheus-rules/rules.yml'
    scrape_configs:
    - job_name: 'pilot'
      # Override the global default and scrape targets from this job every 5 seconds.
      scrape_interval: 5s
      # metrics_path defaults to '/metrics'
      # scheme defaults to 'http'.
      kubernetes_sd_configs:
      - role: endpoints
        namespaces:
          names:
          - istio-system
      relabel_configs:
      - source_labels: [__meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: istio-pilot;http-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: istio-pilot-istio-system
  labels:
    app: pilot
    release: istio
roleRef:
  name: istio-pilot-istio-system
  kind: ClusterRole
  apiGroup: rbac.authorization.k8s.io
subjects:
- name: istio-pilot-service-account
  namespace: istio-system
  kind: ServiceAccount
---
apiVersion: "authentication.istio.io/v1alpha1"
kind: "MeshPolicy"
metadata:
  name: "default"
  labels:
    release: istio
spec:
  peers:
  - mtls:
      mode: PERMISSIVE
---
apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: istio-pilot
  namespace: istio-system
  labels:
    app: pilot
    istio: pilot
    release: istio
spec:
  selector:
    matchLabels:
      app: pilot
      istio: pilot
      release: istio
  minAvailable: 1
---
apiVersion: v1
kind: Service
metadata:
  name: promsd
  namespace: istio-system
  labels:
    app: promsd
  annotations:
    prometheus.io/scrape: "true"
spec:
  selector:
    app: promsd
  ports:
  - name: http-prometheus
    protocol: TCP
    port: 9090
---
apiVersion: v1
kind: Service
metadata:
  name: istio-pilot
  namespace: istio-system
  labels:
    app: pilot
    istio: pilot
    release: istio
spec:
  selector:
    istio: pilot
  ports:
  - name: grpc-xds # direct
    port: 15010
  - name: https-xds # mTLS
    port: 15011
  - name: http-legacy-discovery # direct
    port: 8080
  - name: http-monitoring
    port: 15014
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: promsd
  namespace: istio-system
spec:
  selector:
    matchLabels:
      app: promsd
  template:
    metadata:
      labels:
        app: promsd
      annotations:
        scheduler.alpha.kubernetes.io/critical-pod: ""
        seccomp.security.alpha.kubernetes.io/pod: 'docker/default'
        sidecar.istio.io/inject: "false"
    spec:
      serviceAccountName: promsd
      containers:
      - name: promsd
        image: "gcr.io/gke-release/asm/prometheus:1.4.7-asm.0"
        args:
        - --storage.tsdb.retention=6h
        - --storage.tsdb.path=/data
        - --storage.tsdb.min-block-duration=15m
        - --storage.tsdb.max-block-duration=4h
        - --config.file=/etc/prometheus/prometheus.yml
        ports:
        - name: http
          protocol: TCP
          containerPort: 9090
        volumeMounts:
        - name: config-volume
          mountPath: /etc/prometheus
        - name: rules-config-volume
          mountPath: /etc/prometheus-rules
        - name: istio-certs
          mountPath: /etc/istio-certs
        - name: data-volume
          mountPath: /data
        livenessProbe:
          failureThreshold: 3
          httpGet:
            port: 9090
            path: /-/healthy
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        readinessProbe:
          failureThreshold: 3
          httpGet:
            port: 9090
            path: /-/ready
            scheme: HTTP
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: IfNotPresent
      - name: sidecar
        image: "gcr.io/gke-release/asm/stackdriver-prometheus-sidecar:1.4.7-asm.0"
        args:
        - --prometheus.wal-directory=/data/wal
        - --stackdriver.project-id=
        - --stackdriver.kubernetes.location=
        - --stackdriver.kubernetes.cluster-name=
        - --stackdriver.use-gke-resource
        - --stackdriver.metrics-prefix=container.googleapis.com/internal/addons/istio
        - --config-file=/etc/prometheus-sidecar/sidecar.yml
        - --filter=__name__=~"^(pilot_xds_pushes|pilot_xds_push_timeouts|pilot_errors_xds)$"
        ports:
        - name: sidecar
          protocol: TCP
          containerPort: 9091
        env:
        - name: DEBUG
          value: "1"
        resources: {}
        volumeMounts:
        - name: data-volume
          mountPath: /data
        - name: static-config-volume
          mountPath: /etc/prometheus-sidecar
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        imagePullPolicy: Always
      volumes:
      - name: config-volume
        configMap:
          name: promsd
          defaultMode: 420
      - name: rules-config-volume
        configMap:
          name: promsd-rules
          defaultMode: 420
      - name: data-volume
        emptyDir: {}
      - name: static-config-volume
        configMap:
          name: promsd-sidecar
          defaultMode: 420
      - name: istio-certs
        secret:
          defaultMode: 420
          optional: true
          secretName: istio.default
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - ppc64le
            weight: 2
          - preference:
              matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - s390x
            weight: 2
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: beta.kubernetes.io/arch
                operator: In
                values:
                - amd64
                - ppc64le
                - s390x
